{
  "version": 3,
  "sources": ["../s3-helper.ts"],
  "sourcesContent": ["import { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\r\nimport { Stream } from \"stream\";\r\n\r\nconst s3 = new S3Client({ region: \"us-east-1\" }); // Change to your AWS region\r\n\r\nasync function streamToBuffer(stream: Stream): Promise<Buffer> {\r\n  const chunks: Uint8Array[] = [];\r\n  return new Promise((resolve, reject) => {\r\n    stream.on(\"data\", (chunk) => chunks.push(chunk));\r\n    stream.on(\"end\", () => resolve(Buffer.concat(chunks)));\r\n    stream.on(\"error\", reject);\r\n  });\r\n}\r\n\r\nexport async function uploadFileToS3(file: Stream, fileName: string, s3BucketName: string): Promise<string> {\r\n  const buffer = await streamToBuffer(file);\r\n  \r\n  const basePath = \"public-images/recipes\";\r\n  await s3.send(new PutObjectCommand({\r\n    Bucket: s3BucketName,\r\n    Key: `basePath/${fileName}`,\r\n    Body: buffer,\r\n    ContentType: \"image/jpeg\", // Change dynamically if needed\r\n    ACL: \"public-read\"\r\n  }));\r\n\r\n  return `https://${s3BucketName}.s3.ca-central-1.amazonaws.com/${basePath}/${fileName}`;\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA2C;AAG3C,IAAM,KAAK,IAAI,0BAAS,EAAE,QAAQ,YAAY,CAAC;AAE/C,eAAe,eAAe,QAAiC;AAC7D,QAAM,SAAuB,CAAC;AAC9B,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAO,GAAG,QAAQ,CAAC,UAAU,OAAO,KAAK,KAAK,CAAC;AAC/C,WAAO,GAAG,OAAO,MAAM,QAAQ,OAAO,OAAO,MAAM,CAAC,CAAC;AACrD,WAAO,GAAG,SAAS,MAAM;AAAA,EAC3B,CAAC;AACH;AAEA,eAAsB,eAAe,MAAc,UAAkB,cAAuC;AAC1G,QAAM,SAAS,MAAM,eAAe,IAAI;AAExC,QAAM,WAAW;AACjB,QAAM,GAAG,KAAK,IAAI,kCAAiB;AAAA,IACjC,QAAQ;AAAA,IACR,KAAK,YAAY,QAAQ;AAAA,IACzB,MAAM;AAAA,IACN,aAAa;AAAA;AAAA,IACb,KAAK;AAAA,EACP,CAAC,CAAC;AAEF,SAAO,WAAW,YAAY,kCAAkC,QAAQ,IAAI,QAAQ;AACtF;",
  "names": []
}
